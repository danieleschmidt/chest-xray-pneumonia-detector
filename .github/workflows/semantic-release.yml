name: Semantic Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: github.repository_owner == 'your-org' # Replace with your organization
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/git
          npm install -g @semantic-release/github
          npm install -g @semantic-release/exec

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml

      - name: Configure git
        run: |
          git config user.name "semantic-release-bot"
          git config user.email "semantic-release-bot@users.noreply.github.com"

      - name: Run semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: semantic-release

  # Trigger deployment after successful release
  trigger-deployment:
    name: Trigger Deployment
    needs: semantic-release
    runs-on: ubuntu-latest
    if: needs.semantic-release.outputs.new-release-published == 'true'
    
    steps:
      - name: Trigger production deployment
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'cd-production.yml',
              ref: 'main'
            });
            
            console.log('Production deployment triggered');

      - name: Update deployment status
        run: |
          echo "New release published, deployment triggered"
          # Update external systems about new release
          # Send notifications to relevant teams