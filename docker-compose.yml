version: '3.8'

services:
  # Development environment
  dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: pneumonia-detector-dev
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - PYTHONPATH=/app/src
    volumes:
      - .:/app
      - model-data:/app/saved_models
      - training-data:/app/data
      - mlflow-data:/app/mlruns
    ports:
      - "8888:8888"  # Jupyter (if added)
      - "6006:6006"  # TensorBoard (if used)
    depends_on:
      - mlflow
    networks:
      - ml-network
    command: ["tail", "-f", "/dev/null"]  # Keep container running for development

  # Production inference service
  inference:
    build:
      context: .
      dockerfile: Dockerfile
      target: inference
    container_name: pneumonia-detector-inference
    environment:
      - MODEL_PATH=/app/saved_models/pneumonia_cnn_v1.keras
      - BATCH_SIZE=32
      - IMG_SIZE=224,224
    volumes:
      - model-data:/app/saved_models:ro
      - inference-data:/app/data:ro
      - inference-output:/app/output
    restart: unless-stopped
    networks:
      - ml-network

  # API service (future implementation)
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    container_name: pneumonia-detector-api
    environment:
      - MODEL_PATH=/app/saved_models/pneumonia_cnn_v1.keras
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - model-data:/app/saved_models:ro
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - ml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MLflow tracking server
  mlflow:
    image: python:3.10-slim
    container_name: pneumonia-detector-mlflow
    environment:
      - BACKEND_STORE_URI=postgresql://mlflow:mlflow@postgres:5432/mlflow
      - ARTIFACT_ROOT=/mlflow/artifacts
    volumes:
      - mlflow-data:/mlflow/artifacts
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - ml-network
    command: >
      bash -c "
        pip install mlflow psycopg2-binary &&
        mlflow server
          --backend-store-uri postgresql://mlflow:mlflow@postgres:5432/mlflow
          --artifacts-destination /mlflow/artifacts
          --host 0.0.0.0
          --port 5000
      "
    restart: unless-stopped

  # PostgreSQL for MLflow backend
  postgres:
    image: postgres:13
    container_name: pneumonia-detector-postgres
    environment:
      - POSTGRES_DB=mlflow
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ml-network
    restart: unless-stopped

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: pneumonia-detector-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - ml-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: pneumonia-detector-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - ml-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  model-data:
    driver: local
  training-data:
    driver: local
  inference-data:
    driver: local
  inference-output:
    driver: local
  mlflow-data:
    driver: local
  postgres-data:
    driver: local
  grafana-data:
    driver: local

networks:
  ml-network:
    driver: bridge