[tox]
envlist = py38,py39,py310,py311,lint,security,docs
skip_missing_interpreters = true
isolated_build = true

[testenv]
deps = 
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
    pytest
    pytest-cov
    pytest-xdist
setenv =
    PYTHONPATH = {toxinidir}/src
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
commands =
    pytest {posargs:tests} --cov=src --cov-report=term-missing --cov-report=xml --cov-report=html -n auto

[testenv:lint]
deps =
    ruff
    black
    mypy
    types-requests
commands =
    ruff check src tests
    black --check src tests
    mypy src --ignore-missing-imports

[testenv:security]
deps =
    bandit[toml]
    safety
commands =
    bandit -r src -ll
    safety check --json --output safety-report.json

[testenv:docs]
deps =
    sphinx
    sphinx-rtd-theme
    myst-parser
commands =
    sphinx-build -W -b html docs docs/_build/html

[testenv:performance]
deps =
    {[testenv]deps}
    pytest-benchmark
commands =
    pytest tests/performance/ --benchmark-only --benchmark-json=benchmark-results.json

[testenv:integration]
deps =
    {[testenv]deps}
    docker
commands =
    pytest tests/e2e/ tests/integration/ -v

[testenv:coverage]
deps =
    {[testenv]deps}
    coverage[toml]
commands =
    coverage combine {toxworkdir}
    coverage report --show-missing --fail-under=85
    coverage html
    coverage xml

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    build,
    dist,
    .venv

[coverage:run]
source = src
omit = 
    */tests/*
    */test_*.py
    */conftest.py
    */__init__.py
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    @abstractmethod