# Performance monitoring and optimization configuration
[DEFAULT]
# Global performance settings
profiling_enabled = true
memory_tracking = true
performance_logging = true
benchmark_threshold_ms = 500

[profiling]
# Code profiling configuration
profiler = cProfile
output_format = pstats
output_dir = reports/profiling
sort_by = cumulative
top_functions = 20
memory_profiler = memory_profiler

[benchmarking]
# Performance benchmarking settings
benchmark_suite = pytest-benchmark
warmup_rounds = 3
min_rounds = 5
max_time = 10.0
disable_gc = false
timer = perf_counter
statistics = mean,stddev,min,max

[monitoring]
# Runtime performance monitoring
metrics_backend = prometheus
metrics_port = 9090
health_check_interval = 30
alert_threshold_cpu = 80
alert_threshold_memory = 85
alert_threshold_response_time = 1000

[optimization]
# Performance optimization flags
enable_jit = true
cache_models = true
batch_inference = true
async_processing = true
memory_pool_size = 1024

[data_loading]
# Data pipeline optimization
prefetch_factor = 2
num_workers = 4
pin_memory = true
async_loading = true
cache_dataset = true

[model_optimization]
# ML model performance settings
mixed_precision = true
model_pruning = false
quantization = false
onnx_optimization = true
tensorrt_acceleration = false

[gpu_settings]
# GPU acceleration configuration
cuda_visible_devices = 0
gpu_memory_fraction = 0.8
allow_growth = true
mixed_precision_policy = mixed_float16

[logging]
# Performance logging configuration
log_level = INFO
log_format = %(asctime)s - %(name)s - %(levelname)s - %(message)s
performance_log_file = logs/performance.log
metrics_log_file = logs/metrics.log
rotate_logs = true
max_log_size = 10MB
backup_count = 5