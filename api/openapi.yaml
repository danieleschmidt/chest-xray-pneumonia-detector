openapi: 3.0.3
info:
  title: Chest X-Ray Pneumonia Detector API
  description: |
    Advanced AI-powered API for pneumonia detection from chest X-ray images.
    
    ## Features
    - Real-time inference with confidence scoring
    - Batch processing capabilities
    - Model performance metrics
    - HIPAA-compliant data handling
    - Comprehensive error handling and validation
    
    ## Security
    - API key authentication required
    - Rate limiting enforced
    - Request validation and sanitization
    - Audit logging for all requests
  version: 2.0.0
  contact:
    name: ML Engineering Team
    email: ml-engineering@organization.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.pneumonia-detector.com/v2
    description: Production server
  - url: https://staging-api.pneumonia-detector.com/v2
    description: Staging server
  - url: http://localhost:8000/v2
    description: Development server

security:
  - apiKey: []
  - bearerAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns API health status and system metrics
      tags:
        - System
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /predict/single:
    post:
      summary: Single image prediction
      description: |
        Analyze a single chest X-ray image for pneumonia detection.
        Returns prediction with confidence score and interpretability data.
      tags:
        - Prediction
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  type: string
                  format: binary
                  description: Chest X-ray image (JPEG, PNG, DICOM)
                patient_id:
                  type: string
                  pattern: '^[A-Za-z0-9-_]+$'
                  maxLength: 50
                  description: Optional patient identifier (anonymized)
                include_gradcam:
                  type: boolean
                  default: false
                  description: Include Grad-CAM visualization in response
                confidence_threshold:
                  type: number
                  minimum: 0.0
                  maximum: 1.0
                  default: 0.5
                  description: Minimum confidence threshold for positive prediction
      responses:
        '200':
          description: Prediction successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SinglePredictionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '413':
          description: Image too large
        '415':
          description: Unsupported media type
        '429':
          description: Rate limit exceeded
        '500':
          description: Internal server error

  /predict/batch:
    post:
      summary: Batch image prediction
      description: |
        Process multiple chest X-ray images in a single request.
        Optimized for high-throughput scenarios.
      tags:
        - Prediction
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - images
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  maxItems: 10
                  description: Array of chest X-ray images
                batch_id:
                  type: string
                  pattern: '^[A-Za-z0-9-_]+$'
                  maxLength: 50
                  description: Optional batch identifier for tracking
                confidence_threshold:
                  type: number
                  minimum: 0.0
                  maximum: 1.0
                  default: 0.5
      responses:
        '200':
          description: Batch prediction successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPredictionResponse'
        '400':
          description: Invalid request
        '413':
          description: Batch too large
        '429':
          description: Rate limit exceeded

  /models/{model_id}/metrics:
    get:
      summary: Get model performance metrics
      description: Retrieve detailed performance metrics for a specific model version
      tags:
        - Models
      parameters:
        - name: model_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-Za-z0-9-_]+$'
          description: Model identifier
      responses:
        '200':
          description: Model metrics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMetrics'
        '404':
          description: Model not found

  /models:
    get:
      summary: List available models
      description: Get list of available model versions with metadata
      tags:
        - Models
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, deprecated, experimental]
          description: Filter by model status
      responses:
        '200':
          description: Models list retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsList'

  /audit/logs:
    get:
      summary: Get audit logs
      description: Retrieve API usage audit logs (admin only)
      tags:
        - Audit
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          schema:
            type: string
            format: date-time
        - name: user_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Audit logs retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogs'
        '403':
          description: Insufficient permissions

components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    HealthStatus:
      type: object
      required:
        - status
        - timestamp
        - version
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
          example: "2.0.0"
        model_status:
          type: object
          properties:
            loaded:
              type: boolean
            version:
              type: string
            last_updated:
              type: string
              format: date-time
        system_metrics:
          type: object
          properties:
            cpu_usage:
              type: number
              minimum: 0
              maximum: 100
            memory_usage:
              type: number
              minimum: 0
              maximum: 100
            gpu_usage:
              type: number
              minimum: 0
              maximum: 100

    SinglePredictionResponse:
      type: object
      required:
        - prediction
        - confidence
        - processing_time_ms
        - model_version
      properties:
        prediction:
          type: string
          enum: [normal, pneumonia]
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Prediction confidence score
        processing_time_ms:
          type: integer
          minimum: 0
          description: Processing time in milliseconds
        model_version:
          type: string
          description: Model version used for prediction
        gradcam_url:
          type: string
          format: uri
          description: URL to Grad-CAM visualization (if requested)
        metadata:
          type: object
          properties:
            image_size:
              type: array
              items:
                type: integer
              maxItems: 2
              minItems: 2
            preprocessing_applied:
              type: array
              items:
                type: string
        risk_factors:
          type: object
          properties:
            severity:
              type: string
              enum: [low, moderate, high, critical]
            recommendations:
              type: array
              items:
                type: string

    BatchPredictionResponse:
      type: object
      required:
        - results
        - batch_summary
      properties:
        results:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/SinglePredictionResponse'
              - type: object
                properties:
                  image_index:
                    type: integer
                    minimum: 0
        batch_summary:
          type: object
          properties:
            total_processed:
              type: integer
              minimum: 0
            successful:
              type: integer
              minimum: 0
            failed:
              type: integer
              minimum: 0
            total_processing_time_ms:
              type: integer
              minimum: 0
            pneumonia_detected:
              type: integer
              minimum: 0

    ModelMetrics:
      type: object
      required:
        - model_id
        - version
        - metrics
      properties:
        model_id:
          type: string
        version:
          type: string
        metrics:
          type: object
          properties:
            accuracy:
              type: number
              minimum: 0.0
              maximum: 1.0
            precision:
              type: number
              minimum: 0.0
              maximum: 1.0
            recall:
              type: number
              minimum: 0.0
              maximum: 1.0
            f1_score:
              type: number
              minimum: 0.0
              maximum: 1.0
            auc_roc:
              type: number
              minimum: 0.0
              maximum: 1.0
        validation_dataset:
          type: object
          properties:
            name:
              type: string
            size:
              type: integer
            date_tested:
              type: string
              format: date-time

    ModelsList:
      type: object
      required:
        - models
      properties:
        models:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              version:
                type: string
              status:
                type: string
                enum: [active, deprecated, experimental]
              created_at:
                type: string
                format: date-time
              description:
                type: string
              performance_summary:
                $ref: '#/components/schemas/ModelMetrics'

    AuditLogs:
      type: object
      properties:
        logs:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              user_id:
                type: string
              endpoint:
                type: string
              method:
                type: string
              status_code:
                type: integer
              response_time_ms:
                type: integer
              request_size_bytes:
                type: integer

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        request_id:
          type: string
          description: Unique request identifier for tracking

    ValidationError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            validation_errors:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  message:
                    type: string
                  value:
                    type: string

  examples:
    HealthyResponse:
      value:
        status: "healthy"
        timestamp: "2025-07-29T10:30:00Z"
        version: "2.0.0"
        model_status:
          loaded: true
          version: "pneumonia-detector-v2.1"
          last_updated: "2025-07-29T08:00:00Z"
        system_metrics:
          cpu_usage: 25.5
          memory_usage: 68.2
          gpu_usage: 12.1

    PredictionResponse:
      value:
        prediction: "pneumonia"
        confidence: 0.87
        processing_time_ms: 245
        model_version: "pneumonia-detector-v2.1"
        metadata:
          image_size: [224, 224]
          preprocessing_applied: ["resize", "normalize", "augment"]
        risk_factors:
          severity: "moderate"
          recommendations: ["Follow up with radiologist", "Consider additional imaging"]