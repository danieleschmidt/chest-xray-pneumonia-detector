# Multi-stage build for Quantum-Inspired Task Planner
FROM python:3.11-slim as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create application directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt requirements-dev.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy source code
COPY src/ ./src/
COPY pyproject.toml ./

# Install the package
RUN pip install -e .

# Production stage
FROM python:3.11-slim as production

# Security: Create non-root user
RUN groupadd -r qtp && useradd -r -g qtp -s /bin/false qtp

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    QTP_LOG_LEVEL=info \
    QTP_MAX_PARALLEL_TASKS=4 \
    QTP_MONITORING_ENABLED=true

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create application directory and set permissions
WORKDIR /app
RUN mkdir -p /app/logs /app/model_registry && \
    chown -R qtp:qtp /app

# Copy application from builder stage
COPY --from=builder --chown=qtp:qtp /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder --chown=qtp:qtp /usr/local/bin /usr/local/bin
COPY --from=builder --chown=qtp:qtp /app/src ./src

# Copy configuration files
COPY --chown=qtp:qtp monitoring/ ./monitoring/
COPY --chown=qtp:qtp k8s/ ./k8s/

# Switch to non-root user
USER qtp

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Run the quantum task planner API
CMD ["python3", "-m", "src.api.main_quantum"]