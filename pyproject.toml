[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "quantum_inspired_task_planner"
version = "0.2.0"
requires-python = ">=3.8"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["quantum_inspired_task_planner"]
py-modules = [
    "architecture_review",
    "data_loader",
    "data_split",
    "evaluate",
    "grad_cam",
    "inference",
    "model_builder",
    "predict_utils",
    "dataset_stats",
    "train_engine",
    "version_cli",
    "performance_benchmark",
    "model_architecture_validation",
    "dependency_security_scan",
    "synthetic_medical_data_generator",
    "model_registry",
    "model_management_cli",
    "image_utils",
]

[project.scripts]
quantum-planner = "quantum_inspired_task_planner.task_planner_cli:main"
qtp-version = "version_cli:main"
qtp-benchmark = "performance_benchmark:main"
qtp-security-scan = "dependency_security_scan:main"

[tool.ruff]
line-length = 88
target-version = "py38"
select = ["E", "W", "F", "B", "I", "N", "UP", "S"]
ignore = ["E203", "E501", "S101"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101"]
